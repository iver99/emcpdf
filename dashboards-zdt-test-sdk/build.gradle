apply from: 'test.gradle'
//Security client version
ext.emaasSecurityClientVersion = getDependentSdkVersion('com.oracle.emaas.emcpsf.sdk', 'security-client', '1.+')

ext.customPomDefinition = {
    def dependencies = asNode().appendNode('dependencies')
    configurations.testConfig.allDependencies.each { dep ->
        if (dep.name != 'unspecified') {
            def dependency = dependencies.appendNode('dependency')
            dependency.appendNode('groupId', dep.group)
            dependency.appendNode('artifactId', dep.name)
            dependency.appendNode('version', dep.version)
        }
    }
}


project.publishing.publications {
     integTest(MavenPublication) {
				setArtifactId(project.name + '-' + integTestJar.appendix)
                setGroupId(project.publishGroup)
                artifact integTestJar.archivePath
				pom.withXml customPomDefinition
        }
    
        zdtTasksPub(MavenPublication) {
            // The group name of the artifact should start as com.oracle.emaas.emcpdf.testsdk (where repoName is the name of the git  repository where the plugin source exist)
            setGroupId(project.zdtTasksGroup)
            setVersion(project.zdtTasksVersion + '-' + project.buildTimestamp)
            setArtifactId("emcpdf_zdtTasksSdk")
            artifact("gradle-sdk/emcpdf_zdtTasksSdk.gradle"){
                extension "gradle"
            }
        }
	}



artifactoryPublish{
    publications('zdtTasksPub')
     publications('integTest')
}

test {
    classpath = sourceSets.test.compileClasspath + sourceSets.test.output
    useTestNG()
            {
                //We explicity include only tests annotate as s1 or s2 - they are "short-running" tests,
                //if you wish to run ALL tests within this projet - remove following.
                includeGroups 's1' ,'s2'
            }
}

dependencies {
//    testConfig project(path: ':dashboards-ui-test-common-api', configuration: 'integTestOutput')
    testConfig getProjectArtifact('jmockit')   	
	testConfig getProjectArtifact('log4j-api')   	
	testConfig getProjectArtifact('log4j-core')   	
	testConfig getProjectArtifact('log4j-slf4j-impl')   
}





eclipse {
    classpath {
        plusConfigurations += configurations.testConfig //avoid building error in Eclipse
        plusConfigurations += configurations.testNG //avoid building error in Eclipse
    }
}
check.dependsOn integTestJar
build.dependsOn integTestJar
