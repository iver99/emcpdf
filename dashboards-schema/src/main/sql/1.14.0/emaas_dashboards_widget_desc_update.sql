Rem
Rem emaas_dashboards_seed_data_ta.sql
Rem
Rem Copyright (c) 2013, 2014, 2015, 2016, Oracle and/or its affiliates.
Rem All rights reserved.
Rem
Rem    NAME
Rem      emaas_dashboards_seed_data_ta.sql
Rem
Rem    DESCRIPTION
Rem      Seed data for TAUPDATE
Rem
Rem    NOTES
Rem      None
Rem
Rem    MODIFIED   (MM/DD/YY)
Rem    xiadai      11/24/16 - fix EMCPDF-2718
Rem
SET FEEDBACK ON
SET SERVEROUTPUT ON
DEFINE TENANT_ID ='&1'
DECLARE
V_COUNT     NUMBER;
V_TENANT_ID NUMBER(38,0);
V_TID NUMBER(38,0) := '&TENANT_ID';
V_DASHBOARD_ID NUMBER(38,0);
V_DESCRIPTION  VARCHAR2(256 BYTE);

CURSOR TENANT_CURSOR IS
    SELECT DISTINCT TENANT_ID FROM EMS_DASHBOARD ORDER BY TENANT_ID;

BEGIN
  OPEN TENANT_CURSOR;
  LOOP
     IF (V_TID<>-1) THEN
        V_TENANT_ID:=V_TID;
     ELSE
       FETCH TENANT_CURSOR INTO V_TENANT_ID;
       EXIT WHEN TENANT_CURSOR%NOTFOUND;     
     END IF;  


     V_DASHBOARD_ID :=2;
     V_DESCRIPTION  :='Determine the root-cause of recurring systemic database performance problems, Identify common performance findings across databases and maximize database performance';
     SELECT COUNT(*) INTO V_COUNT FROM EMS_DASHBOARD
        WHERE DASHBOARD_ID = V_DASHBOARD_ID AND TENANT_ID = V_TENANT_ID AND DESCRIPTION = V_DESCRIPTION;
     IF V_COUNT > 0 THEN
        DBMS_OUTPUT.PUT_LINE('NO NEED TO UPDATE THE DESCRIPTION FOR DASHBOARD WITH ID 2 FOR TENANT: '|| V_TENANT_ID || ', WHICH HAS BEEN UPDATED BEFORE');
     ELSE
        UPDATE EMS_DASHBOARD SET DESCRIPTION = V_DESCRIPTION WHERE TENANT_ID = V_TENANT_ID AND DASHBOARD_ID = V_DASHBOARD_ID;
        DBMS_OUTPUT.PUT_LINE('DESCRIPTION FOR DASHBOARD WITH ID 2 FOR TENANT: '|| V_TENANT_ID || ', HAS BEEN UPDATED SUCCESSFULLY');
      END IF;

     V_DASHBOARD_ID :=3;
     V_DESCRIPTION  :='Analyze Database Resource Usage, forecast future capacity requirements';
     SELECT COUNT(*) INTO V_COUNT FROM EMS_DASHBOARD
        WHERE DASHBOARD_ID = V_DASHBOARD_ID AND TENANT_ID = V_TENANT_ID AND DESCRIPTION = V_DESCRIPTION;
     IF V_COUNT > 0 THEN
        DBMS_OUTPUT.PUT_LINE('NO NEED TO UPDATE THE DESCRIPTION FOR DASHBOARD WITH ID 3 FOR TENANT: '|| V_TENANT_ID || ', WHICH HAS BEEN UPDATED BEFORE');
     ELSE
        UPDATE EMS_DASHBOARD SET DESCRIPTION = V_DESCRIPTION WHERE TENANT_ID = V_TENANT_ID AND DASHBOARD_ID = V_DASHBOARD_ID;
        DBMS_OUTPUT.PUT_LINE('DESCRIPTION FOR DASHBOARD WITH ID 3 FOR TENANT: '|| V_TENANT_ID || ', HAS BEEN UPDATED SUCCESSFULLY');
     END IF;

     V_DASHBOARD_ID :=21;
     V_DESCRIPTION  :='Provides visibility to overall health of your IT systems and applications';
     SELECT COUNT(*) INTO V_COUNT FROM EMS_DASHBOARD
        WHERE DASHBOARD_ID = V_DASHBOARD_ID AND TENANT_ID = V_TENANT_ID AND DESCRIPTION = V_DESCRIPTION;
     IF V_COUNT > 0 THEN
        DBMS_OUTPUT.PUT_LINE('NO NEED TO UPDATE THE DESCRIPTION FOR DASHBOARD WITH ID 21 FOR TENANT: '|| V_TENANT_ID || ', WHICH HAS BEEN UPDATED BEFORE');
     ELSE
        UPDATE EMS_DASHBOARD SET DESCRIPTION = V_DESCRIPTION WHERE TENANT_ID = V_TENANT_ID AND DASHBOARD_ID = V_DASHBOARD_ID;
        DBMS_OUTPUT.PUT_LINE('DESCRIPTION FOR DASHBOARD WITH ID 21 FOR TENANT: '|| V_TENANT_ID || ', HAS BEEN UPDATED SUCCESSFULLY');
     END IF;

     IF (V_TID<>-1) THEN
        EXIT;
     END IF;
  END LOOP;
  CLOSE TENANT_CURSOR;
  commit;
  DBMS_OUTPUT.PUT_LINE('Upgrade is done');    
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      DBMS_OUTPUT.PUT_LINE('Failed to update the sql due to '||SQLERRM);
      RAISE;
  END;
  /
