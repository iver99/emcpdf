/* Copyright (c) 2014, Oracle and/or its affiliates. All rights reserved.*/
/*
 * DESCRIPTION
 *     <<description here>>
 *
 * PRIVATE CLASSES
 *     NONE
 *
 * NOTES
 *    <other useful comments, qualifications, etc.>
 *
 * MODIFIED    (MM/DD/YY)
 *   << file history here >>
 *
 */
/* *************************************************************************************************
 *                   BEGIN TEST-INFRA-BLOCK
 ***************************************************************************************************
 * DO NOT EDIT THE LINES BELOW. PLEASE ADD YOUR LRG SPECIFIC CODE AFTER
 * THE LINE "END OF TEST-INFRA-BLOCK
 */
/**
 * Run the buildscript{} configuration to pull the em-test-infraplugin.
 */
buildscript {
    repositories {
        maven {
            url = "${artifactory_contextUrl}/${artifactory_virtual_repoKey}" }
    }
    dependencies {
        classpath group: 'com.oracle.emaas.emdi', name: 'TestInfraPlugin', version: "${testinfraVersion}", transitive: true
    }
}
apply from: 'setup.gradle'

apply plugin: 'TestInfraPlugin'
import com.oracle.emdi.gradle.testinfra.tasks.EMTest;
/* *************************************************************************************************
 *                   END OF TEST-INFRA-BLOCK
 ***************************************************************************************************/
 
/* Your lrg specific code would come here */
repositories {
maven {
        url = "${PUB_MAVEN_MY_MAVEN_REPO}"
     }        

        maven {
            url = "${artifactory_contextUrl}/${artifactory_virtual_repoKey}" }
    }
dependencies {
    testConfig (group: 'com.oracle.emaas.emcpdf.test', name: 'dashboardsui-webutils-integ-tests', version: "${REPO_BID}"){
	exclude('module':'groovy')
    }
    testConfig group: 'com.oracle.emdi.test', name: 'emaas_smalldeployment', version: "${integDeployVersion}"

testConfig(group: 'com.oracle.emaas.emcpdf.test', name: 'dashboards-web', version: "${REPO_BID}")
        testConfig(group: 'com.oracle.emaas.emcpdf.test', name: 'dashboards-core', version: "${REPO_BID}")
        testConfig(group: 'com.oracle.emaas.emcpdf.test', name: 'dashboards-entities', version: "${REPO_BID}")
         testConfig(group: 'com.oracle.emaas.emcpdf.test', name: 'dashboards-webutils', version: "${REPO_BID}")
   	 testConfig(group: 'com.oracle.emaas.emcpdf.test', name: 'dashboards-webutils', version: "${REPO_BID}")
        testConfig(group: 'com.oracle.emaas.emdi', name: 'em-qatool-os-webdriver', version: '1.0.7') {transitive=false}
	testConfig(group: 'com.oracle.emaas.emcpdf.test', name: 'dashboardsui-webutils', version: "${REPO_BID}")
 	testConfig(group: 'org.apache.logging.log4j', name:'log4j-core', version:'2.0.1'){ transitive = false }
        testConfig(group: 'org.apache.logging.log4j', name:'log4j-api', version:'2.0.1'){ transitive = false }
        testConfig(group: 'com.oracle.jdbc', name: 'ojdbc6', version: '12.1.0.1.0') { transitive = false }
        testConfig(group: 'org.eclipse.persistence', name: 'javax.persistence', version: '2.0.5') { transitive = false }
        testConfig(group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.4.2')  { transitive = false }
        testConfig(group: 'javax.transaction', name: 'javax.transaction-api', version: '1.2') { transitive = false }
        testConfig(group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.13') { transitive = false }
        testConfig(group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13') { transitive = false }
        testConfig(group: 'org.codehaus.jackson', name: 'jackson-xc', version: '1.9.2') { transitive = false }
        testConfig(group: 'com.oracle.emaas', name:'emaas-platform-tenant-sdk', version:'0.2'){transitive=false }

    configurations{
	restAssured.exclude module:'groovy'
    }
}
 



task DeployDFUI(type:Exec) {

        commandLine 'gradle', '-p', getGitRoot()+'/dashboards-ui/dashboardsui-ee/', 'appServerDeploy'
        }
task PropsCopy(type: Copy,dependsOn: DeployDFUI) {
   from '/net/slc07ctj/scratch/emaas/setuplogs/'
   into '../../oracle/work/'
    include '*.log'
}

apply plugin: 'java'

task logdir(type: Copy,dependsOn: PropsCopy) {
    def logdir = new File("/var/opt/ORCLemaas/logs/dashboardsService")
    println("logdir: "+logdir)
exec{commandLine "/usr/local/packages/aime/em/run_as_root","rm -rf /var/opt/ORCLemaas/logs/dashboardsService"}
    if( !logdir.exists() ) {
        println("creating logdir")

         if(exec{commandLine "/usr/local/packages/aime/em/run_as_root","mkdir -vp /var/opt/ORCLemaas/logs/dashboardsService"}) {
            println("succeeded in making folder")
           exec{commandLine "/usr/local/packages/aime/em/run_as_root","chmod -R 777 /var/opt/ORCLemaas/logs/dashboardsService"}


            if(logdir.exists()) {
                println("folder exists")
            } else {
                println("folder does not exist")
            }
        } else {
            println("failed to make folder")
        }
    } 
}

task DEVUiTest(type:EMTest,dependsOn: logdir){
  	include "oracle/sysman/emaas/platform/dashboards/ui/webutils/util/JsonUtilTest.class"
	include "oracle/sysman/emaas/platform/dashboards/ui/webutils/util/TenantSubscriptionUtilTest.class"
	include "oracle/sysman/emaas/platform/dashboards/ui/webutils/wls/management/AppLoggingManageMXBeanTest.class"
 	useRestAssured=true
	ext.set("testType", "unit")
}


task emcpdf_dev_ui_test(dependsOn:DEVUiTest)

