/* Copyright (c) 2014, Oracle and/or its affiliates. All rights reserved.*/
/*
 * DESCRIPTION
 *     <<description here>>
 *
 * PRIVATE CLASSES
 *     NONE
 *
 * NOTES
 *    <other useful comments, qualifications, etc.>
 *
 * MODIFIED    (MM/DD/YY)
 *   << file history here >>
 *
 */
/* *************************************************************************************************
 *                   BEGIN TEST-INFRA-BLOCK
 ***************************************************************************************************
 * DO NOT EDIT THE LINES BELOW. PLEASE ADD YOUR LRG SPECIFIC CODE AFTER
 * THE LINE "END OF TEST-INFRA-BLOCK
 */
/**
 * Run the buildscript{} configuration to pull the em-test-infraplugin.
 */
buildscript {
    repositories {
        maven {
            url = "${artifactory_contextUrl}/${artifactory_virtual_repoKey}" }
    }
    dependencies {
        classpath group: 'com.oracle.emaas.emdi', name: 'TestInfraPlugin', version: "${testinfraVersion}", transitive: true
	classpath group:"com.oracle.emaas.emdi", name: "DevInfraPlugin", version: "1.0+", transitive: true
	}
}
apply from: 'setup.gradle'
apply plugin: 'TestInfraPlugin'
apply plugin: 'DevInfraPlugin'
import com.oracle.emdi.gradle.testinfra.tasks.EMTest;
/* *************************************************************************************************
 *                   END OF TEST-INFRA-BLOCK
 ***************************************************************************************************/
 
/* Your lrg specific code would come here */
repositories {
	
 maven {
         url = "${PUB_MAVEN_MY_MAVEN_REPO}"
     }
        maven {
            url = "${artifactory_contextUrl}/${artifactory_virtual_repoKey}" }
    }
dependencies {
	testConfig configurations.webdriver
	testConfig (group: 'com.oracle.emaas.emcpdf.test', name: 'dashboards-core-integ-tests', version: "${REPO_BID}"){
		exclude('module':'groovy')
	}
  	testConfig(group: 'com.oracle.jdbc', name: 'ojdbc6', version: '12.1.0.1.0') { transitive = false }
        testConfig(group: 'org.eclipse.persistence', name: 'javax.persistence', version: '2.0.5') { transitive = false }
        testConfig(group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.4.2')  { transitive = false }
        testConfig(group: 'javax.transaction', name: 'javax.transaction-api', version: '1.2') { transitive = false }
       testConfig(group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.13') { transitive = false }
       testConfig(group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13') { transitive = false }
       testConfig(group: 'org.codehaus.jackson', name: 'jackson-xc', version: '1.9.2') { transitive = false }
 	testConfig(group: 'com.oracle.emaas.emcpdf.test', name: 'dashboards-web', version: "${REPO_BID}")
        testConfig(group: 'com.oracle.emaas.emcpdf.test', name: 'dashboards-core', version: "${REPO_BID}")
        testConfig(group: 'com.oracle.emaas.emcpdf.test', name: 'dashboards-entities', version: "${REPO_BID}")
         testConfig(group: 'com.oracle.emaas.emcpdf.test', name: 'dashboards-webutils', version: "${REPO_BID}")
      
 	testConfig(group: 'org.codehaus.jettison', name: 'jettison', version: '1.3.4')  { transitive = false }
 	testConfig(group: 'org.apache.logging.log4j', name:'log4j-core', version:'2.0.1')  { transitive = false }
        testConfig(group: 'org.apache.logging.log4j', name:'log4j-api', version:'2.0.1')  { transitive = false }
	testConfig(group: 'org.jmockit', name: 'jmockit', version: '1.19') { transitive = false }
	testConfig(group: 'org.jacoco', name: 'org.jacoco.agent', version: '0.7.2.201409121644')
	testConfig(group: 'org.ow2.asm', name: 'asm-debug-all', version: '5.0.1')
	configurations{
		restAssured.exclude module:'groovy'
	}
}


apply plugin: 'java'




task DEVTest(type:EMTest){
//  	include "oracle/sysman/emaas/platform/dashboards/core/persistence/DashboardServiceFacadeTest.class"
	include "oracle/sysman/emaas/platform/dashboards/core/PreferenceManagerTest_S2.class"
	include "oracle/sysman/emaas/platform/dashboards/core/DashboardManagerTest_S2.class"
	include "oracle/sysman/emaas/platform/dashboards/core/model/*"
//	include "oracle/sysman/emaas/platform/dashboards/core/wls/management/*"
	useRestAssured=true
	ext.set("testType", "unit")
}



task emcpdf_dev_test(dependsOn: DEVTest)

if (new File("codeCoverage.gradle").exists()) {
apply from: "../../codeCoverage/codeCoverage.gradle"
}
