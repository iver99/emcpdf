/* Copyright (c) 2014, Oracle and/or its affiliates. All rights reserved.*/
/*
 * DESCRIPTION
 *     <<description here>>
 *
 * PRIVATE CLASSES
 *     NONE
 *
 * NOTES
 *    <other useful comments, qualifications, etc.>
 *
 * MODIFIED    (MM/DD/YY)
 *   << file history here >>
 *
 */
/* *************************************************************************************************
 *                   BEGIN TEST-INFRA-BLOCK
 ***************************************************************************************************
 * DO NOT EDIT THE LINES BELOW. PLEASE ADD YOUR LRG SPECIFIC CODE AFTER
 * THE LINE "END OF TEST-INFRA-BLOCK
 */
/**
 * Run the buildscript{} configuration to pull the em-test-infraplugin.
 */
buildscript {
    repositories {
        maven {
            url = "${artifactory_contextUrl}/${artifactory_virtual_repoKey}" }
    }
    dependencies {
        classpath group: 'com.oracle.emaas.emdi', name: 'TestInfraPlugin', version: "${testinfraVersion}", transitive: true
    }
}

apply plugin: 'TestInfraPlugin'
import com.oracle.emdi.gradle.testinfra.tasks.EMTest;
/* *************************************************************************************************
 *                   END OF TEST-INFRA-BLOCK
 ***************************************************************************************************/
 
 
/* Your lrg specific code would come here */
repositories {
 maven {
            url = "${PUB_MAVEN_MY_MAVEN_REPO}"
         }
        maven {
            url = "${artifactory_contextUrl}/${artifactory_virtual_repoKey}" }

    }
dependencies {
    testConfig (group: 'com.oracle.emaas.emcpdf', name: 'omc-ui-framework-web-integ-tests', version: "${REPO_BID}") {
	exclude('module':'groovy')
}
 testConfig group: 'com.oracle.emdi.test', name: 'emaas_smalldeployment', version: "${integDeployVersion}"


configurations {
restAssured.exclude module: 'groovy'
}
}

task copyDependencies(type: Copy) {
    from configurations.lrgConfig
    into System.env.T_WORK
}
task small_deploy_3n_block(type: EMTest) {
    onlyIf {!System.env.SMALLDEPLOY_IGNORESETUP}
    options.suiteXmlBuilder().suite('name': 'lrgemcpdf_uifwk_test_3n') {
        test('name': 'emaas_setup_small_deploy') {
            classes([:]) {
                'class'('name': 'oracle.sysman.test.emaas.integ.EmaasSmallDeploy3n') {
                    methods([:]) {
                        'include' ('name': 'setupEmaasSmallDeploy')
                    }
                }
        //      'class'('name': 'oracle.sysman.test.emaas.integ.EmaasSanityTests')
            }
        }
    }
    useWebdriver = true
    useRestAssured = true
}

     task QATest(type:EMTest,dependsOn: small_deploy_3n_block){ 
	include "oracle/sysman/emaas/platform/uifwk/dashboardscommonui/test/ui/TestAnalyzerPage.class"
	include "oracle/sysman/emaas/platform/uifwk/dashboardscommonui/test/ui/TestDashboardPage.class"
	include "oracle/sysman/emaas/platform/uifwk/dashboardscommonui/test/ui/TestOtherPage.class"
	include "oracle/sysman/emaas/platform/uifwk/timepicker/test/ui/TestDateTimePicker.class"
        useWebdriver = true
	useRestAssured=true
}
task small_deploy_3n_cleanup(type: EMTest) {
    onlyIf {!System.env.SMALLDEPLOY_IGNORESETUP}
    options.suiteXmlBuilder().suite('name': 'lrgemctas_uitsts_3n') {
        test('name': 'emaas_setup_small_deploy') {
            classes([:]) {
                'class'('name': 'oracle.sysman.test.emaas.integ.EmaasSmallDeploy3n') {
                    methods([:]) {
                        'include' ('name': 'logCollectionAndPostCleanup')
                    }
                }
            }
        }
    }
 mustRunAfter ([small_deploy_3n_block,QATest])
}


task emcpdf_uifwk_test_3n (dependsOn: [QATest, small_deploy_3n_cleanup])
