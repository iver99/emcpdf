import org.gradle.api.plugins.jetty.internal.Monitor

apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply from: 'test.gradle'

// Directory where the restful API doc is generated
ext.restDocRootDir = "${buildDir}/restdoc" 
ext.restDocOutputDir = "${restDocRootDir}"

//Security client version
//ext.emaasSecurityClientVersion = getDependentSdkVersion('com.oracle.emaas.emcpsf.sdk', 'security-client', '1.+')


tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
    }
configurations {
	restDoc
	
	ftpAntTask
}

war.archiveName "dashboards-web.war"

war {
	from('src/main/java') { 
		include '**/*.properties'
		into('WEB-INF/classes') 
	}
        from('src/main/java') {
                include '**/*.xsd'
                into('WEB-INF/classes')
        }
	from('WebContent/WEB-INF') {
                include '**/web.xml'
                into('WEB-INF')
        }

}






publishing.publications {
        integTest(MavenPublication) {
                setArtifactId(project.name + '-' + integTestJar.appendix)
                setGroupId("${publishGroup}")
                artifact integTestJar.archivePath
        }

        thisJarPublication(MavenPublication) {
                setGroupId("${publishGroup}")
                artifact jar
        }
}

artifactoryPublish {
        publications('integTest')
        publications('thisJarPublication')
}

task jarMe(type: Jar) {
        from sourceSets.main.output
        baseName = "${project.archivesBaseName}"
}


/**
 * Generates documentation for the REST service API
 */  
task restDoc {
 
    // Configure task input and output to not generate the doc again when the 
    // source file have not changed
    inputs.files 'src/main/java/oracle/sysman/emaas/platform/dashboards/ws/rest'
    outputs.dir restDocOutputDir
}


/**
 * FTP the REST API document to the ftp server
 */

task ftpRestDoc << {
		ant {
			taskdef(name: 'ftp',
                classname: 'org.apache.tools.ant.taskdefs.optional.net.FTP',
                classpath: configurations.ftpAntTask.asPath)
			ftp(server: ftpserver, userid: username, password: password, remotedir: remote_restdoc_dir) {
				fileset(dir: "${restDocOutputDir}")
			}
		}
	}


test {
	classpath = sourceSets.test.compileClasspath + sourceSets.test.output
	useTestNG()
	{
		//We explicity include only tests annotate as s1 or s2 - they are "short-running" tests,
		//if you wish to run ALL tests within this projet - remove following.
		includeGroups 's1' ,'s2'
	}
}


dependencies {
	providedCompile project(':dashboards-entities')  
	providedCompile project(':dashboards-core')  
    providedCompile project(':dashboards-webutils')
    providedCompile project(':dashboards-sdk')
    providedCompile getProjectArtifact('servlet-api')   
    providedCompile getProjectArtifact('jersey-client')   
    providedCompile getProjectArtifact('jersey-core')   
    providedCompile getProjectArtifact('jersey-multipart')   
    providedCompile getProjectArtifact('jettison')   
    providedCompile getProjectArtifact('javax.ws.rs-api')   
    
    providedCompile getProjectArtifact('jackson-core-asl')   
    providedCompile getProjectArtifact('jackson-mapper-asl')   
    
    providedCompile getProjectArtifact('jackson-xc')   
    providedCompile getProjectArtifact('commons-lang3')   
    providedCompile getProjectArtifact('commons-logging')   
    providedCompile getProjectArtifact('hamcrest-core')   
    providedCompile getProjectArtifact('httpclient')   
    providedCompile getProjectArtifact('httpcore')   
    providedCompile getProjectArtifact('httpmime')   
    providedCompile getProjectArtifact('groovy-all')   
    providedCompile getProjectArtifact('registry-lookup-client')   
    providedCompile getProjectArtifact('emaas-platform-tenant-sdk')   
    compile getProjectArtifact('security-client')   


	
	ftpAntTask('org.apache.ant:ant-commons-net:12.1.2-0-0') {
			module('commons-net:commons-net:1.4.1') {
				dependencies 'oro:oro:2.0.8:jar'
			}
		}
 }

build.dependsOn jarMe

eclipse {
    classpath {
        plusConfigurations += configurations.restAssured //avoid building error in Eclipse
    }
}
